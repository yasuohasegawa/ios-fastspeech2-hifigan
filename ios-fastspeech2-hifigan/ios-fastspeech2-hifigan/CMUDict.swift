//
//  CMUDict.swift
//  OpenJTalkForiOS
//
//  Created by Yasuo Hasegawa on 2025/07/13.
//

import Foundation

// this code generated by gemini
class CMUDict {
    private var dictionary: [String: [String]] = [:]

    init() throws {
        guard let url = Bundle.main.url(forResource: "cmudict", withExtension: "txt") else {
            throw G2PError.fileNotFound("cmudict.txt")
        }

        let content = try String(contentsOf: url, encoding: .utf8)
        let lines = content.split(separator: "\n")

        for line in lines {
            if line.starts(with: ";;;") { continue }

            let parts = line.split(separator: " ", maxSplits: 1)
            guard parts.count == 2 else { continue }

            let wordWithAlt = String(parts[0])
            let cleanWord = wordWithAlt.components(separatedBy: "(")[0]

            // This is the string that might contain a leading number, e.g., "1 AH0"
            let phonemesString = String(parts[1])

            var phonemeParts = phonemesString.split(separator: " ").map { String($0) }
            
            if let firstPart = phonemeParts.first, Int(firstPart) != nil {
                phonemeParts.removeFirst()
            }
            
            let phonemes = phonemeParts

            if dictionary[cleanWord] == nil {
                dictionary[cleanWord] = phonemes
            }
        }
        print("âœ… CMU Dictionary loaded with \(dictionary.count) entries.")
    }

    func getPhonemes(for word: String) -> [String]? {
        return dictionary[word]
    }
}

enum G2PError: Error {
    case fileNotFound(String)
}
